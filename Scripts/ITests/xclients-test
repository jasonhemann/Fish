#! /bin/sh
#| -*- racket -*-
exec racket -W error -tm "$0" -- ${1+"$@"}
|#
#lang racket

;; main p:port-number (between 10,000 and 60,000) launches a server on this port 

(provide main)

;; ---------------------------------------------------------------------------------------------------
(require 20SwDev/Code/10/run-server-client)
(require SwDev/Testing/communication)
(require SwDev/Testing/harness)
(require (submod Fish/Admin/manager examples))

;; ---------------------------------------------------------------------------------------------------
(define TIME (+ (+ 30 30) 60))
(define BASE (get-starter-port))

(define (main path-to-student-xclient)
  (let* ([success 0]
         [success (+ (run-a-test path-to-student-xclient  5 BASE 5players-counted) success)]
         [success (+ (run-a-test path-to-student-xclient 10 (+ BASE 1) 10players-counted) success)])
    (set-starter-port (+ BASE 2))
    (report-results success 2)))

;; ---------------------------------------------------------------------------------------------------
#; {PathString N Port# [List N N] -> Void}
(define (run-a-test path-to-student-xclient n port expected)
  (define-values (in __ tear-down) (local-setup (λ () (run-server port))))

  (define-values (_1 _2 tear-down-students)
    [(make-setup path-to-student-xclient (map ~a (list n port)) (λ (in out) (values in out)))])
     
  (define result 
    (parameterize ((io-time-out TIME))
      (read-message in)))
  
  (tear-down)
  (tear-down-students)

  (cond 
    [(equal? result expected) (displayln `[success ,n]) 1]
    [else                     (displayln `[failure ,result]) 0]))
